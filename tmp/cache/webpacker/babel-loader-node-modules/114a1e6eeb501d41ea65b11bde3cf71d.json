{"ast":null,"code":"var _jsxFileName = \"/Users/huiyu/WDI/unit_4/project/sign/SgSL/app/javascript/components/displayword/displayword.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport RandomWords from 'random-words';\n\nvar DisplayWord =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DisplayWord, _React$Component);\n\n  function DisplayWord() {\n    var _this;\n\n    _classCallCheck(this, DisplayWord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayWord).call(this));\n    _this.state = {\n      alphabets: []\n    };\n    return _this;\n  }\n\n  _createClass(DisplayWord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAlphabets();\n    }\n  }, {\n    key: \"getAlphabets\",\n    value: function getAlphabets() {\n      var _this2 = this;\n\n      fetch('/games/merdeaf.json').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        return _this2.setState({\n          alphabets: result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var word = this.props.word;\n      var letters = word.split(\"\");\n      var a = 0,\n          b = 1,\n          c = 2,\n          d = 3,\n          e = 4,\n          f = 5,\n          g = 6,\n          h = 7,\n          i = 8,\n          j = 9,\n          k = 10,\n          l = 11,\n          m = 12,\n          n = 13,\n          o = 14,\n          p = 15,\n          q = 16,\n          r = 17,\n          s = 18,\n          t = 19,\n          u = 20,\n          v = 21,\n          w = 22,\n          x = 23,\n          y = 24,\n          z = 25;\n\n      if (this.state.alphabets[0] !== undefined) {\n        var splitword = letters.map(function (letter, index) {\n          var splitalphabets = _this3.state.alphabets.map(function (alphabets) {\n            if (alphabets.name.toLowerCase() === letter) {\n              console.log(alphabets.link);\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                src: alphabets.link,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35\n                },\n                __self: this\n              }), letter);\n            }\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Start Game\"));\n    }\n  }]);\n\n  return DisplayWord;\n}(React.Component);\n\nexport { DisplayWord as default };","map":{"version":3,"sources":["/Users/huiyu/WDI/unit_4/project/sign/SgSL/app/javascript/components/displayword/displayword.jsx"],"names":["React","ReactDOM","PropTypes","RandomWords","DisplayWord","state","alphabets","getAlphabets","fetch","then","res","json","result","setState","word","props","letters","split","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","undefined","splitword","map","letter","index","splitalphabets","name","toLowerCase","console","log","link","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport RandomWords from 'random-words'\n\nexport default class DisplayWord extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            alphabets : []\n        };\n    }\n\n    componentDidMount() {\n        this.getAlphabets();\n    }\n\n    getAlphabets() {\n        fetch('/games/merdeaf.json')\n        .then(res=>res.json())\n        .then(result=>this.setState({alphabets: result}));\n    }\n\n    render(){\n        let word = this.props.word;\n        let letters = word.split(\"\");\n        let [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z] = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n\n\n        if (this.state.alphabets[0] !== undefined) {\n            let splitword = letters.map((letter, index)=>{\n                let splitalphabets = this.state.alphabets.map(alphabets => {\n                    if(alphabets.name.toLowerCase() === letter){\n                        console.log(alphabets.link);\n                        return(<div><img src={alphabets.link}/>{letter}</div>);\n                    }\n                })\n            });\n        }\n\n        return(\n            <div>\n                <button>Start Game</button>\n            </div>\n            )\n    }\n}"]},"metadata":{},"sourceType":"module"}